package snc01ManagerWebService;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2016-05-03T16:17:04.431+08:00
 * Generated source version: 2.7.18
 * 
 */
//@WebServiceClient(name = "SNC01ManagerService", 
//                  wsdlLocation = "http://192.168.4.161:9092/SNC01Manager?wsdl",
//                  targetNamespace = "http://WebService/") 
public class SNC01ManagerService extends Service {

	public static URL WSDL_LOCATION;

    public static URL getWSDL_LOCATION(URL wSDL_LOCATION) {
    	WSDL_LOCATION = wSDL_LOCATION;
		return WSDL_LOCATION;
	}

	public final static QName SERVICE = new QName("http://WebService/", "SNC01ManagerService");
    public final static QName SNC01ManagerPort = new QName("http://WebService/", "SNC01ManagerPort");
//    static {
//        URL url = null;
//        try {
//            url = new URL("http://192.168.4.161:9092/SNC01Manager?wsdl");
//        } catch (MalformedURLException e) {
//            java.util.logging.Logger.getLogger(SNC01ManagerService.class.getName())
//                .log(java.util.logging.Level.INFO, 
//                     "Can not initialize the default wsdl from {0}", "http://192.168.4.161:9092/SNC01Manager?wsdl");
//        }
//        WSDL_LOCATION = url;
//    }

    public SNC01ManagerService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SNC01ManagerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SNC01ManagerService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SNC01ManagerService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SNC01ManagerService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SNC01ManagerService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ISNC01Manager
     */
    @WebEndpoint(name = "SNC01ManagerPort")
    public ISNC01Manager getSNC01ManagerPort() {
        return super.getPort(SNC01ManagerPort, ISNC01Manager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISNC01Manager
     */
    @WebEndpoint(name = "SNC01ManagerPort")
    public ISNC01Manager getSNC01ManagerPort(WebServiceFeature... features) {
        return super.getPort(SNC01ManagerPort, ISNC01Manager.class, features);
    }

}
